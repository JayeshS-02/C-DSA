#include <cstring>
#include <iostream>
#include <limits.h>
using namespace std;
// int main() {
// array declare

// int arr[7];
// cout<<arr<<endl;
// cout<<"array Created ";

// Array taking input from user
//  int arr[5];
//  cout<<"Taking values from user : "<<endl;
//  for(int i=0;i<5;i++)
//    {
//      cin>>arr[i];
//    }
//  cout<<"Printing Array values :"<<endl;
//  for(int i=0;i<5;i++)
//    {
//      cout<<arr[i]<<" ";
//    }

// Double of Array
//  int n;
//  int arr[500];
//  cout<<"How many numbers do you want to add in arry: ";
//  cin>>n;
//  cout<<"Enter the number :";
//    for(int i=0;i<n;i++)
//    {
//        cin>>arr[i];
//    }
//  cout<<"Printing doubles : "<<endl;
//  for(int i=0;i<n;i++)
//    {
//      cout<<2*arr[i]<< " ";
//    }

// int arr[5]={1,3,5,7,9};
// for(int i=0;i<5;i++)
//   {
//     arr[i]=1;
//   }
// for(int i=0;i<5;i++)
//   {
//     cout<<arr[i]<<" ";
//   }

// use of memeset()
//  char str[] = "geeksforgeeks";
//  memset(str, 't', sizeof(str));
//  cout << str;
//  return 0;

// int arr[5]={1,3,5,7,9};
// memset(arr,0,sizeof(arr));
// for(int i=0;i<5;i++)
//   {
//     cout<<arr[i]<<" ";
//   }

// }

// void printArray(int arr[], int size)
// {
//   for(int i=0;i<size;i++)
//     {
//       cout<<arr[i]<<" ";
//     }
//   cout<<endl;
// }

// void inc(int arr[],int size)
// {
//   arr[0]=arr[0]+10;
//   printArray(arr , size);
// }

// int main()
// {
//   int arr[]={5,6};
//   int size = 2;
//   inc(arr,size);
//   printArray(arr,size);
// }

// Linear Search
//  int main()
//  {
//      int arr[]={1,2,3,4,5,6,7,8};
//      int size=8;
//      int key = 5;
//      bool flag = 0;
//      //0 -> not found
//      //1 -> found

//     //Linear Search
//     for(int i=0;i<size;i++)
//     {
//         if(arr[i]==key)
//         {
//             flag=1;
//             break;
//         }
//     }
//     if(flag)
//     {
//         cout<<"Found";
//     }
//     else
//     {
//         cout<<"Not Found";
//     }
//     return 0;
// }

// count number of 1 and 0 in array
//  int main()
//  {
//      int arr[]={0,1,1,1,0,0,0,0,1,0,1,0,1,0,1};
//      int size=15;
//      int numZero=0;
//      int numOne=0;
//      for(int i=0;i<size;i++)
//      {

//         //if 0 found then increment 0 count by 1
//         if(arr[i]==0)
//         {
//             numZero++;
//         }

//         //if 1 found then increment 1 count by 1
//         if(arr[i]==1)
//         {
//             numOne++;
//         }
//     }
//     cout<<"Number of Zeroes : "<<numZero<<endl;
//     cout<<"Number of Ones : "<<numOne<<endl;
//     return 0;
//

// Maximum number from ARRAY
//  int main()
//  {
//      int arr[]={2,4,1,-6,8,9,56,21,34};
//      int size=9;
//    //intitalize maximum with minimum possible integer value
//      int max_num=INT_MIN;
//      for (int i=0;i<size;i++)
//      {
//           if(arr[i]>max_num)
//           {
//             //found a number greater than max_num then update max_num
//               max_num=arr[i];
//           }
//      }
//      cout<<"Maximum number : "<<max_num;
//  }

// Minimum number from ARRAY
//  int main()
//  {
//    int arr[]={3,5,7,1,8,9,10};
//    int size = 7;
//    int mini=INT_MAX;
//    for(int i=0;i<size;i++)
//      {
//        if(arr[i]<mini)
//        {
//          mini=arr[i];
//        }
//      }
//    cout<<"Minimum number : "<<mini;
//  }

// print from start and end;
//   int main()
//  {
//    int arr[]={10,20,30,40,50,60,70};
//    int size=7;
//    int start=0;
//    int end=size-1;
//    while(start<=end)
//      {
//        if(start==end)
//        {
//          cout<<arr[start]<<" ";
//        }
//        else{
//          cout<<arr[start]<<" ";
//          cout<<arr[end]<<" ";
//        }
//        start++;
//        end--;
//      }
//  }

// reverse an ARRAY
int main() {
  int arr[] = {10, 20, 30, 40, 50, 60};
  int size = 6;
  int start = 0;
  int end = size - 1;
  while (start <= end) {

    // step1
    swap(arr[start], arr[end]);

    // step2
    start++;

    // step3
    end--;
  }
  for (int i = 0; i < size; i++) {
    cout << arr[i] << " ";
  }
}
